
free c :channel [private].

free m:bitstring [private].

type pubEK.
type privEK. 
type shareKey.
fun X25519(pubEK, privEK): shareKey.
fun make(bitstring): bitstring.


fun pkEK(privEK): pubEK.


equation forall sk1 : privEK, sk2 : privEK;  X25519(pkEK(sk1), sk2) = X25519(pkEK(sk2), sk1).

event EDcreatekey(shareKey).
event AScreatekey(shareKey).
event test().


query k : shareKey;
      event (EDcreatekey(k)) ==> event (AScreatekey(k)).





process
  new sk1 : privEK;
  let pk1 = pkEK(sk1) in
  new sk2 : privEK;
  let pk2 = pkEK(sk2) in
  let k1 = X25519(pk2, sk1) in
  let k2 = X25519(pk1, sk2) in
  event AScreatekey(k1);
  event EDcreatekey(k2);
  out(c,sk1)
    
  
    


